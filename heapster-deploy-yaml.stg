/*
 * Mandatory:
 * 
 * vars.heapster.image.version
 * vars.heapster.image.name
 * vars.resizer.image.name
 * vars.resizer.image.version
 * vars.nanny.limits.cpu
 * vars.nanny.limits.memory
 * vars.nanny.requests.cpu
 * vars.nanny.requests.memory
 * vars.metrics.baseCpu
 * vars.metrics.cpuPerNode
 * vars.metrics.baseMemory
 * vars.metrics.memoryPerNode
 * vars.eventer.baseMemory
 * vars.eventer.memoryPerNode
 */

import "affinities.stg"
import "tolerations.stg"

heapster-deploy-yaml(parent, vars) ::= <<
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: heapster-<vars.heapster.image.version>
  namespace: kube-system
  labels:
    k8s-app: heapster
    version: <vars.heapster.image.version>
    robobeerun.com/group: cluster-monitoring-heapster
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: heapster
      version: <vars.heapster.image.version>
  template:
    metadata:
      labels:
        k8s-app: heapster
        version: <vars.heapster.image.version>
        robobeerun.com/group: cluster-monitoring-heapster
    spec:
      containers:
        - image: <vars.heapster.image.name>:<vars.heapster.image.version>
          name: heapster
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 180
            timeoutSeconds: 5
          command:
            - /heapster
            - --source=kubernetes.summary_api:''
            - --sink=influxdb:http://monitoring-influxdb:8086
        - image: <vars.heapster.image.name>:<vars.heapster.image.version>
          name: eventer
          command:
            - /eventer
            - --source=kubernetes:''
            - --sink=influxdb:http://monitoring-influxdb:8086
        - image: <vars.resizer.image.name>:<vars.resizer.image.version>
          name: heapster-nanny
          resources:
            limits:
              cpu: <vars.nanny.limits.cpu>
              memory: <vars.nanny.limits.memory>
            requests:
              cpu: <vars.nanny.requests.cpu>
              memory: <vars.nanny.requests.memory>
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          command:
            - /pod_nanny
            - --cpu=<vars.metrics.baseCpu>
            - --extra-cpu=<vars.metrics.cpuPerNode>
            - --memory=<vars.metrics.baseMemory>
            - --extra-memory=<vars.metrics.memoryPerNode>
            - --threshold=5
            - --deployment=heapster-<vars.heapster.image.version>
            - --container=heapster
            - --poll-period=300000
            - --estimator=exponential
        - image: <vars.resizer.image.name>:<vars.resizer.image.version>
          name: eventer-nanny
          resources:
            limits:
              cpu: <vars.nanny.limits.cpu>
              memory: <vars.nanny.limits.memory>
            requests:
              cpu: <vars.nanny.requests.cpu>
              memory: <vars.nanny.requests.memory>
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          command:
            - /pod_nanny
            - --cpu=100m
            - --extra-cpu=0m
            - --memory=<vars.eventer.baseMemory>
            - --extra-memory=<vars.eventer.memoryPerNode>
            - --threshold=5
            - --deployment=heapster-<vars.heapster.image.version>
            - --container=eventer
            - --poll-period=300000
            - --estimator=exponential
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: robobeerun.com/cluster-monitoring-heapster
                operator: In
                values:
                - required
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: robobeerun.com/cluster-monitoring-heapster
                operator: In
                values:
                - preferred
<affinitiesGroup(parent, vars)>
<tolerationsGroup(parent, vars, vars.heapster.tolerations)>
>>
