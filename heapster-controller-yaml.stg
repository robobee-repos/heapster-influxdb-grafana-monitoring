/*
 * Mandatory:
 *
 * vars.heapster.image.version
 * vars.heapster.image.name
 * vars.eventer.baseCpu
 * vars.eventer.extraCpu
 * vars.eventer.baseMemory
 * vars.eventer.extraMemory
 * vars.resizer.image.name
 * vars.resizer.image.version
 * vars.nanny.limits.cpu
 * vars.nanny.limits.memory
 * vars.nanny.requests.cpu
 * vars.nanny.requests.memory
 * vars.metrics.baseCpu
 * vars.metrics.extraCpu
 * vars.metrics.baseMemory
 * vars.metrics.extraMemory
 *
 * Optional:
 *
 * vars.heapster.affinity.key
 * vars.heapster.affinity.name
 * vars.heapster.affinity.required
 * vars.heapster.allowOnMaster
 * vars.heapster.tolerations[].effect
 * vars.heapster.tolerations[].key
 * vars.heapster.tolerations[].value
 */

import "_affinities.stg"
import "_tolerations.stg"

/*
 *
 */
heapster-controller-yaml(parent, vars) ::= <<
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: heapster
  namespace: kube-system
  labels:
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: heapster-config
  namespace: kube-system
  labels:
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: EnsureExists
data:
  NannyConfiguration: |-
    apiVersion: nannyconfig/v1alpha1
    kind: NannyConfiguration
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: eventer-config
  namespace: kube-system
  labels:
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: EnsureExists
data:
  NannyConfiguration: |-
    apiVersion: nannyconfig/v1alpha1
    kind: NannyConfiguration
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: heapster-<vars.heapster.image.version>
  namespace: kube-system
  labels:
    k8s-app: heapster
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    version: <vars.heapster.image.version>
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: heapster
      version: <vars.heapster.image.version>
  template:
    metadata:
      labels:
        k8s-app: heapster
        version: <vars.heapster.image.version>
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
    spec:
      priorityClassName: system-cluster-critical
      containers:
        - image: <vars.heapster.image.name>:<vars.heapster.image.version>
          name: heapster
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 180
            timeoutSeconds: 5
          command:
            - /heapster
            - --source=kubernetes.summary_api:''
            - --sink=influxdb:http://monitoring-influxdb:8086
        - image: <vars.heapster.image.name>:<vars.heapster.image.version>
          name: eventer
          command:
            - /eventer
            - --source=kubernetes:''
            - --sink=influxdb:http://monitoring-influxdb:8086
        - image: <vars.resizer.image.name>:<vars.resizer.image.version>
          name: heapster-nanny
          resources:
<if(vars.nanny.limits)>
            limits:
              <if(vars.nanny.limits.cpu)>cpu: <vars.nanny.limits.cpu><endif>
              <if(vars.nanny.limits.memory)>memory: <vars.nanny.limits.memory><endif>
<endif>
<if(vars.nanny.requests)>
            requests:
              <if(vars.nanny.requests.cpu)>cpu: <vars.nanny.requests.cpu><endif>
              <if(vars.nanny.requests.memory)>memory: <vars.nanny.requests.memory><endif>
<endif>
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
          - name: heapster-config-volume
            mountPath: /etc/config
          command:
            - /pod_nanny
            - --config-dir=/etc/config
            - --cpu=<vars.metrics.baseCpu>
            - --extra-cpu=<vars.metrics.extraCpu>
            - --memory=<vars.metrics.baseMemory>
            - --extra-memory=<vars.metrics.extraMemory>
            - --threshold=5
            - --deployment=heapster-<vars.heapster.image.version>
            - --container=heapster
            - --poll-period=300000
            - --estimator=exponential
        - image: <vars.resizer.image.name>:<vars.resizer.image.version>
          name: eventer-nanny
          resources:
<if(vars.nanny.limits)>
            limits:
              <if(vars.nanny.limits.cpu)>cpu: <vars.nanny.limits.cpu><endif>
              <if(vars.nanny.limits.memory)>memory: <vars.nanny.limits.memory><endif>
<endif>
<if(vars.nanny.requests)>
            requests:
              <if(vars.nanny.requests.cpu)>cpu: <vars.nanny.requests.cpu><endif>
              <if(vars.nanny.requests.memory)>memory: <vars.nanny.requests.memory><endif>
<endif>
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
          - name: eventer-config-volume
            mountPath: /etc/config
          command:
            - /pod_nanny
            - --config-dir=/etc/config
            - --cpu=<vars.eventer.baseCpu>
            - --extra-cpu=<vars.eventer.extraCpu>
            - --memory=<vars.eventer.baseMemory>
            - --extra-memory=<vars.eventer.extraMemory>
            - --threshold=5
            - --deployment=heapster-<vars.heapster.image.version>
            - --container=eventer
            - --poll-period=300000
            - --estimator=exponential
      volumes:
        - name: heapster-config-volume
          configMap:
            name: heapster-config
        - name: eventer-config-volume
          configMap:
            name: eventer-config
      serviceAccountName: heapster
      tolerations:
        - key: "CriticalAddonsOnly"
          operator: "Exists"
        <tolerationMasterEntry(parent, vars, vars.heapster.allowOnMaster)>
<if(vars.heapster.tolerations)>
        <tolerationsEntry(parent, vars, vars.heapster.tolerations)>
<endif>
<if(vars.heapster.affinity)>
      <affinitiesGroup(parent, vars, vars.heapster.affinity)>
<endif>

>>
